datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Link {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  description String
  url         String
  postedBy    User?    @relation(fields: [postedById], references: [id])
  postedById  String?
  votes       Vote[]
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  links    Link[]
  votes    Vote[]
  orders Order[]
}

model Vote {
  id     Int    @id @default(autoincrement())
  link   Link   @relation(fields: [linkId], references: [id])
  linkId String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([linkId, userId])
}

// enum PizzaSize {
//   SMALL
//   MEDIUM
//   LARGE
//   XLARGE
// }

// enum Crust {
//   ORIGINAL
//   DEEP_DISH
//   THIN_CRISPY
//   GLUTEN_FREE
// }

// enum Sauce {
//   MARINARA
//   ALFREDO
//   BBQ
//   BUFFALO
//   NONE
// }

// enum CheeseAmount {
//   REGULAR
//   LIGHT
//   HEAVY
//   NONE
// }

// enum Topping {
//   PEPPERONI
//   SAUSAGE
//   BACON
//   HAM
//   CHICKEN
//   MUSHROOM
//   ONION
//   PINEAPPLE
//   BLACK_OLIVE
//   GREEN_PEPPER
//   JALAPENO
//   TOMATO
// }

// model Pizza {
//   id        Int      @id @default(autoincrement())
//   name String?
//   size PizzaSize
//   crust Crust
//   sauce Sauce
//   cheeseAmount CheeseAmount
//   toppings Topping[]
//   order Order? @relation(fields: [orderId], references: [id])
//   orderId Int?
// }

model Pizza {
  id        Int      @id @default(autoincrement())
  name String?
  size String
  crust String
  sauce String
  cheeseAmount String
  toppings String
  order Order? @relation(fields: [orderId], references: [id])
  orderId Int?
}

model Wings {
  id        Int      @id @default(autoincrement())
  name String?
  count Int
  sauce String
  heatLevel String
  order Order? @relation(fields: [orderId], references: [id])
  orderId Int?
}

model Order {
 id        Int      @id @default(autoincrement())
 createdAt DateTime  @default(now())
 pizzas Pizza[]
 wings Wings[]
 email String
 user   User   @relation(fields: [userId], references: [id])
 userId String
}
